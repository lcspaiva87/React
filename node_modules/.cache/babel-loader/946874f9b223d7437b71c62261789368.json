{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xbo\\\\Desktop\\\\react\\\\meu-app\\\\src\\\\TextCounter.js\";\nimport React, { Component } from 'react';\n\nclass TextCounter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalChars: 0,\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const element = event.target,\n          text = element.value;\n\n    if (text.length < this) {\n      this.setState({\n        totalChars: text.length,\n        text\n      });\n    }\n  }\n\n  render() {\n    const {\n      state,\n      props\n    } = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Meu Contator\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      value: state.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, \"Total:\"), state.totalChars, \" / \", props.limit));\n  }\n\n}\n\nTextCounter.defaultProps = {\n  limit: 15\n};\nexport default TextCounter;","map":{"version":3,"sources":["C:/Users/xbo/Desktop/react/meu-app/src/TextCounter.js"],"names":["React","Component","TextCounter","constructor","props","state","totalChars","text","handleChange","bind","event","element","target","value","length","setState","render","limit","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAmC;AAI/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,UAAU,EAAC,CADJ;AAEPC,MAAAA,IAAI,EAAC;AAFE,KAAX;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,YAAY,CAACE,KAAD,EAAO;AACf,UAAMC,OAAO,GAAGD,KAAK,CAACE,MAAtB;AAAA,UACAL,IAAI,GAAGI,OAAO,CAACE,KADf;;AAGA,QAAGN,IAAI,CAACO,MAAL,GAAc,IAAjB,EAAsB;AAClB,WAAKC,QAAL,CAAc;AACVT,QAAAA,UAAU,EAAEC,IAAI,CAACO,MADP;AAEVP,QAAAA;AAFU,OAAd;AAIH;AAEJ;;AACDS,EAAAA,MAAM,GAAE;AACJ,UAAK;AAACX,MAAAA,KAAD;AAAOD,MAAAA;AAAP,QAAc,IAAnB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAU,MAAA,QAAQ,EAAE,KAAKI,YAAzB;AAAuC,MAAA,KAAK,EAAEH,KAAK,CAACE,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAC4BF,KAAK,CAACC,UADlC,SACiDF,KAAK,CAACa,KADvD,CAHJ,CADJ;AASH;;AAnC8B;;AAA7Bf,W,CACKgB,Y,GAAa;AAChBD,EAAAA,KAAK,EAAC;AADU,C;AAsCxB,eAAef,WAAf","sourcesContent":["import React,{ Component } from 'react';\r\n\r\nclass TextCounter extends Component{\r\n    static defaultProps={\r\n        limit:15\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            totalChars:0,\r\n            text:''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event){\r\n        const element = event.target,\r\n        text = element.value;\r\n    \r\n        if(text.length < this){\r\n            this.setState({\r\n                totalChars: text.length,\r\n                text\r\n            });\r\n        }\r\n       \r\n    }\r\n    render(){\r\n        const{state,props}=this;\r\n        return(\r\n            <div>\r\n                <h1>Meu Contator</h1>\r\n                <textarea onChange={this.handleChange} value={state.text} />\r\n                <div>\r\n                    <strong>Total:</strong>{state.totalChars} / {props.limit}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TextCounter;"]},"metadata":{},"sourceType":"module"}